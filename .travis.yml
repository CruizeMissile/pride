
#
# Configuration
#
language: cpp
dist: trusty
sudo: true

#
# Build Dependencies
#
before_script:

  #
  # Build Folder
  #
  - mkdir build
  - cd build

  #
  # Update / Install CMake
  #
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p external/cmake
      pushd external/cmake
      wget https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.sh
      chmod +x cmake-*-Linux-x86_64.sh
      ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      export PATH="${PWD}/bin:$PATH"
      popd
    else
      if ! brew ls --version cmake &>/dev/null; then brew update; brew install cmake; fi
    fi

#
# Build Matrix
#
matrix:
  include:

  #
  # Doxygen
  #
  # - os: linux
  #   env:
  #     - TEST="Doxygen"
  #   addons:
  #     apt:
  #       packages:
  #         - doxygen
  #   script:
  #     - cd ..
  #     - doxygen .doxygen.txt
  #     - |
  #       if [[ -s doxygen_warnings.txt ]]; then
  #         echo "You must fix doxygen before submitting a pull request"
  #         echo ""
  #         cat doxygen_warnings.txt
  #         exit -1
  #       fi

  #
  # Git Check
  #
  - os: linux
    env:
      - TEST="Git Check"
    script:
      - |
        if [[ -n $(git diff --check HEAD^) ]]; then
          echo "You must remove whitespace before submitting a pull request"
          echo ""
          git diff --check HEAD^
          exit -1
        fi

  #
  # Clang Format
  #
  - os: linux
    env:
      - TEST="Clang Format"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
        packages:
          - clang-format-6.0
    script:
      - mkdir -p latest-clang-format-symlink
      - ln -s /usr/bin/clang-format-6.0 latest-clang-format-symlink/clang-format
      - export PATH=$PWD/latest-clang-format-symlink:$PATH
      - which clang-format
      - clang-format --version
      - cmake -DENABLE_CLANG_FORMAT=ON -DCMAKE_CXX_COMPILER="clang-6.0" ..
      - make format
      - |
        if [[ -n $(git diff) ]]; then
          echo "You must run make format before submitting a pull request"
          echo ""
          git diff
          exit -1
        fi


  #
  # Clang Tidy
  #
  - os: linux
    env:
      - TEST="Clang Tidy"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
        packages:
          - clang-6.0
          - clang-tidy-6.0
    script:
      - cmake -DENABLE_CLANG_TIDY=ON -DCMAKE_CXX_COMPILER="clang-6.0" ..
      - make tidy > output.txt
      - |
        if [[ -n $(grep "warning: " output.txt) ]] || [[ -n $(grep "error: " output.txt) ]]; then
            echo "You must pass the clang tidy checks before submitting a pull request"
            echo ""
            grep --color -E '^|warning: |error: ' output.txt
            exit -1;
        else
            echo -e "\033[1;32m\xE2\x9C\x93 passed:\033[0m $1";
        fi

  #
  # CppCheck
  #
  - os: linux
    env:
      - TEST="CppCheck"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
    script:
      - cmake -DENABLE_CPPCHECK=ON -DCMAKE_CXX_COMPILER="g++-8" ..
      - make
      - make install
      - make check

  #
  # Codecov
  #
  # - os: linux
  #   env:
  #     - TEST="Codecov"
  #   addons:
  #     apt:
  #       sources:
  #         - ubuntu-toolchain-r-test
  #       packages:
  #         - gcc-8
  #         - g++-8
  #   script:
  #     - cmake -ENABLE_CODECOV=ON -DCMAKE_CXX_COMPILER="g++-8" ..
  #     - make
  #     - make tests
  #     - cd ..
  #     - bash <(curl -s https://codecov.io/bash)

  #
  # G++ 8
  #
  - os: linux
    env:
      - TEST="G++ 8"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-8" ..
      - make
      - make tests

  #
  # Clang 5.0
  #
  - os: linux
    env:
      - TEST="Clang 5.0"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-5.0
        packages:
          - clang-5.0
          - gcc-8
          - g++-8
    script:
      - cmake -DCMAKE_C_COMPILER=clang-5.0 -DCMAKE_CXX_COMPILER=clang++-5.0 ..
      - make
      - make tests

  #
  # Clang 6.0
  #
  - os: linux
    env:
      - TEST="Clang 6.0"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
        packages:
          - clang-6.0
          - gcc-8
          - g++-8
    script:
      - cmake -DCMAKE_C_COMPILER=clang-6.0 -DCMAKE_CXX_COMPILER=clang++-6.0 ..
      - make
      - make tests

  #
  # XCode 8.3
  #
  # - os: osx
  #   env:
  #     - TEST="XCode 8.3"
  #   osx_image: xcode8.3
  #   script:
  #     - cmake ..
  #     - make
  #     - make tests
